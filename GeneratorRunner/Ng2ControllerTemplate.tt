<#@ template language="C#" inherits="ControllerTemplate" #>
<#@ import namespace="System.Linq" #>
<#@ import namespace="TypescriptModel.Controller" #>
import {Injectable} from '@angular/core';
import {Http, Headers, RequestOptions} from '@angular/http';
import 'rxjs/add/operator/map';
import {Observable} from 'rxjs/Observable';

<# ImportUsedClasses(Model.UsedClasses, Model.Module); #>
declare var Global;

@Injectable()
export class <#= Model.Name.Replace("Controller", "Service")#> {
    constructor(private _http: Http) {
    }
<# WriteUrlBuilder(); #>
<# foreach (var method in Model.Methods) {#>
    <#= GetMethodName(method) #>(<#=BuildParams(method) #>)<# if(method.ReturnType != null) Write($": Observable<{method.TsReturnType}>"); #> {
        var url = this.urlBuilder.<#= GetMethodName(method) #>(<#= BuildCallParams(method) #>);
        return this._http.<#= method.HttpMethod.ToString().ToLower() #>(url, <# 
if (method.NeedsBody)
{
    var postParam = method.Parameters.FirstOrDefault(p => p.ParameterType == ParameterType.Body);
    Write(postParam != null ? $"JSON.stringify({postParam.Name}), " : "'', ");
}
		#>this._buildOptions())<# if (method.ReturnType != null) {#>

            .map(res => res.json())<# } #>;
    }
<# } #>
    private _buildOptions() {
        let headers = new Headers({ 'Content-Type': 'application/json; charset=utf-8' });
        return new RequestOptions({headers: headers});
    }
}
