<#@ template language="C#" inherits="ControllerTemplate" #>
<#@ import namespace="System.Linq" #>
<#@ import namespace="TypescriptModel.Controller" #>
<# ImportUsedClasses(Model.UsedClasses, Model.Module); #>
declare var Global;

export class <#= Model.Name.Replace("Controller", "Api")#> {
    static $inject = ['$http', '$q'];
    constructor(private $http: ng.IHttpService, private $q: ng.IQService) {
    }
<# WriteUrlBuilder(); #>
<# foreach (var method in Model.Methods) {#>
    <#= GetMethodName(method) #>(<#=BuildParams(method) #>)<# if(method.ReturnType != null) Write($": ng.Promise<{method.TsReturnType}>"); #> {
        var url = this.urlBuilder.<#= GetMethodName(method) #>(<#= BuildCallParams(method) #>);
        var defer = this.$q.defer();
        this.$http.<#= method.HttpMethod.ToString().ToLower() #>(url<# 
if (method.NeedsBody)
{
    var postParam = method.Parameters.FirstOrDefault(p => p.ParameterType == ParameterType.Body);
    Write(postParam != null ? $", {postParam.Name}" : ", ''");
}
		#>)
            .success(function(data) {
                return defer.resolve();
        });
        return defer.promise;
    }	
<# } #>
}
